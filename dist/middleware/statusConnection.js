"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.default = statusConnection;

















var _functions = require("../util/functions"); /*
 * Copyright 2021 WPPConnect Team
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */async function statusConnection(req, res, next) {try {const numbers = [];if (req.client && req.client.isConnected) {await req.client.isConnected();const localArr = (0, _functions.contactToArray)(req.body.phone || [], req.body.isGroup);let index = 0;for (const contact of localArr) {
        if (req.body.isGroup) {
          localArr[index] = contact;
        } else if (numbers.indexOf(contact) < 0) {
          const profile = await req.client.
          checkNumberStatus(contact).
          catch((error) => console.log(error));
          if (!profile?.numberExists) {
            const num = contact.split('@')[0];
            return res.status(400).json({
              response: {
                error: 'notExists',
                phone: num,
                nome: req.body.name
              },
              status: 'Connected',
              message: `O número ${num} não existe.`
            });
          } else {
            if (numbers.indexOf(profile.id._serialized) < 0) {
              numbers.push(profile.id._serialized);
            }
            localArr[index] = profile.id._serialized;
          }
        }
        index++;
      }
      req.body.phone = localArr;
    } else {
      return res.status(404).json({
        response: null,
        status: 'Disconnected',
        message: 'A sessão do WhatsApp não está ativa.'
      });
    }
    next();
  } catch (error) {
    req.logger.error(error);
    return res.status(404).json({
      response: null,
      status: 'Disconnected',
      message: 'A sessão do WhatsApp não está ativa.'
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZnVuY3Rpb25zIiwicmVxdWlyZSIsInN0YXR1c0Nvbm5lY3Rpb24iLCJyZXEiLCJyZXMiLCJuZXh0IiwibnVtYmVycyIsImNsaWVudCIsImlzQ29ubmVjdGVkIiwibG9jYWxBcnIiLCJjb250YWN0VG9BcnJheSIsImJvZHkiLCJwaG9uZSIsImlzR3JvdXAiLCJpbmRleCIsImNvbnRhY3QiLCJpbmRleE9mIiwicHJvZmlsZSIsImNoZWNrTnVtYmVyU3RhdHVzIiwiY2F0Y2giLCJlcnJvciIsImNvbnNvbGUiLCJsb2ciLCJudW1iZXJFeGlzdHMiLCJudW0iLCJzcGxpdCIsInN0YXR1cyIsImpzb24iLCJyZXNwb25zZSIsIm5vbWUiLCJuYW1lIiwibWVzc2FnZSIsImlkIiwiX3NlcmlhbGl6ZWQiLCJwdXNoIiwibG9nZ2VyIl0sInNvdXJjZXMiOlsiLi4vLi4vc3JjL21pZGRsZXdhcmUvc3RhdHVzQ29ubmVjdGlvbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG4gKiBDb3B5cmlnaHQgMjAyMSBXUFBDb25uZWN0IFRlYW1cclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG5cclxuaW1wb3J0IHsgTmV4dEZ1bmN0aW9uLCBSZXF1ZXN0LCBSZXNwb25zZSB9IGZyb20gJ2V4cHJlc3MnO1xyXG5cclxuaW1wb3J0IHsgY29udGFjdFRvQXJyYXkgfSBmcm9tICcuLi91dGlsL2Z1bmN0aW9ucyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBzdGF0dXNDb25uZWN0aW9uKFxyXG4gIHJlcTogUmVxdWVzdCxcclxuICByZXM6IFJlc3BvbnNlLFxyXG4gIG5leHQ6IE5leHRGdW5jdGlvblxyXG4pIHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgbnVtYmVyczogYW55ID0gW107XHJcbiAgICBpZiAocmVxLmNsaWVudCAmJiByZXEuY2xpZW50LmlzQ29ubmVjdGVkKSB7XHJcbiAgICAgIGF3YWl0IHJlcS5jbGllbnQuaXNDb25uZWN0ZWQoKTtcclxuXHJcbiAgICAgIGNvbnN0IGxvY2FsQXJyID0gY29udGFjdFRvQXJyYXkocmVxLmJvZHkucGhvbmUgfHwgW10sIHJlcS5ib2R5LmlzR3JvdXApO1xyXG4gICAgICBsZXQgaW5kZXggPSAwO1xyXG4gICAgICBmb3IgKGNvbnN0IGNvbnRhY3Qgb2YgbG9jYWxBcnIpIHtcclxuICAgICAgICBpZiAocmVxLmJvZHkuaXNHcm91cCkge1xyXG4gICAgICAgICAgbG9jYWxBcnJbaW5kZXhdID0gY29udGFjdDtcclxuICAgICAgICB9IGVsc2UgaWYgKG51bWJlcnMuaW5kZXhPZihjb250YWN0KSA8IDApIHtcclxuICAgICAgICAgIGNvbnN0IHByb2ZpbGU6IGFueSA9IGF3YWl0IHJlcS5jbGllbnRcclxuICAgICAgICAgICAgLmNoZWNrTnVtYmVyU3RhdHVzKGNvbnRhY3QpXHJcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IGNvbnNvbGUubG9nKGVycm9yKSk7XHJcbiAgICAgICAgICBpZiAoIXByb2ZpbGU/Lm51bWJlckV4aXN0cykge1xyXG4gICAgICAgICAgICBjb25zdCBudW0gPSAoY29udGFjdCBhcyBhbnkpLnNwbGl0KCdAJylbMF07XHJcbiAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgcmVzcG9uc2U6IHtcclxuICAgICAgICAgICAgICAgIGVycm9yOiAnbm90RXhpc3RzJyxcclxuICAgICAgICAgICAgICAgIHBob25lOiBudW0sXHJcbiAgICAgICAgICAgICAgICBub21lOiByZXEuYm9keS5uYW1lLFxyXG4gICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgc3RhdHVzOiAnQ29ubmVjdGVkJyxcclxuICAgICAgICAgICAgICBtZXNzYWdlOiBgTyBuw7ptZXJvICR7bnVtfSBuw6NvIGV4aXN0ZS5gLFxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGlmICgobnVtYmVycyBhcyBhbnkpLmluZGV4T2YocHJvZmlsZS5pZC5fc2VyaWFsaXplZCkgPCAwKSB7XHJcbiAgICAgICAgICAgICAgKG51bWJlcnMgYXMgYW55KS5wdXNoKHByb2ZpbGUuaWQuX3NlcmlhbGl6ZWQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIChsb2NhbEFyciBhcyBhbnkpW2luZGV4XSA9IHByb2ZpbGUuaWQuX3NlcmlhbGl6ZWQ7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGluZGV4Kys7XHJcbiAgICAgIH1cclxuICAgICAgcmVxLmJvZHkucGhvbmUgPSBsb2NhbEFycjtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNCkuanNvbih7XHJcbiAgICAgICAgcmVzcG9uc2U6IG51bGwsXHJcbiAgICAgICAgc3RhdHVzOiAnRGlzY29ubmVjdGVkJyxcclxuICAgICAgICBtZXNzYWdlOiAnQSBzZXNzw6NvIGRvIFdoYXRzQXBwIG7Do28gZXN0w6EgYXRpdmEuJyxcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBuZXh0KCk7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIHJlcS5sb2dnZXIuZXJyb3IoZXJyb3IpO1xyXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA0KS5qc29uKHtcclxuICAgICAgcmVzcG9uc2U6IG51bGwsXHJcbiAgICAgIHN0YXR1czogJ0Rpc2Nvbm5lY3RlZCcsXHJcbiAgICAgIG1lc3NhZ2U6ICdBIHNlc3PDo28gZG8gV2hhdHNBcHAgbsOjbyBlc3TDoSBhdGl2YS4nLFxyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0JBLElBQUFBLFVBQUEsR0FBQUMsT0FBQSxzQkFBbUQsQ0FsQm5EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQU1lLGVBQWVDLGdCQUFnQkEsQ0FDNUNDLEdBQVksRUFDWkMsR0FBYSxFQUNiQyxJQUFrQixFQUNsQixDQUNBLElBQUksQ0FDRixNQUFNQyxPQUFZLEdBQUcsRUFBRSxDQUN2QixJQUFJSCxHQUFHLENBQUNJLE1BQU0sSUFBSUosR0FBRyxDQUFDSSxNQUFNLENBQUNDLFdBQVcsRUFBRSxDQUN4QyxNQUFNTCxHQUFHLENBQUNJLE1BQU0sQ0FBQ0MsV0FBVyxDQUFDLENBQUMsQ0FFOUIsTUFBTUMsUUFBUSxHQUFHLElBQUFDLHlCQUFjLEVBQUNQLEdBQUcsQ0FBQ1EsSUFBSSxDQUFDQyxLQUFLLElBQUksRUFBRSxFQUFFVCxHQUFHLENBQUNRLElBQUksQ0FBQ0UsT0FBTyxDQUFDLENBQ3ZFLElBQUlDLEtBQUssR0FBRyxDQUFDLENBQ2IsS0FBSyxNQUFNQyxPQUFPLElBQUlOLFFBQVEsRUFBRTtRQUM5QixJQUFJTixHQUFHLENBQUNRLElBQUksQ0FBQ0UsT0FBTyxFQUFFO1VBQ3BCSixRQUFRLENBQUNLLEtBQUssQ0FBQyxHQUFHQyxPQUFPO1FBQzNCLENBQUMsTUFBTSxJQUFJVCxPQUFPLENBQUNVLE9BQU8sQ0FBQ0QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFO1VBQ3ZDLE1BQU1FLE9BQVksR0FBRyxNQUFNZCxHQUFHLENBQUNJLE1BQU07VUFDbENXLGlCQUFpQixDQUFDSCxPQUFPLENBQUM7VUFDMUJJLEtBQUssQ0FBQyxDQUFDQyxLQUFLLEtBQUtDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDRixLQUFLLENBQUMsQ0FBQztVQUN2QyxJQUFJLENBQUNILE9BQU8sRUFBRU0sWUFBWSxFQUFFO1lBQzFCLE1BQU1DLEdBQUcsR0FBSVQsT0FBTyxDQUFTVSxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzFDLE9BQU9yQixHQUFHLENBQUNzQixNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQztjQUMxQkMsUUFBUSxFQUFFO2dCQUNSUixLQUFLLEVBQUUsV0FBVztnQkFDbEJSLEtBQUssRUFBRVksR0FBRztnQkFDVkssSUFBSSxFQUFFMUIsR0FBRyxDQUFDUSxJQUFJLENBQUNtQjtjQUNqQixDQUFDO2NBQ0RKLE1BQU0sRUFBRSxXQUFXO2NBQ25CSyxPQUFPLEVBQUcsWUFBV1AsR0FBSTtZQUMzQixDQUFDLENBQUM7VUFDSixDQUFDLE1BQU07WUFDTCxJQUFLbEIsT0FBTyxDQUFTVSxPQUFPLENBQUNDLE9BQU8sQ0FBQ2UsRUFBRSxDQUFDQyxXQUFXLENBQUMsR0FBRyxDQUFDLEVBQUU7Y0FDdkQzQixPQUFPLENBQVM0QixJQUFJLENBQUNqQixPQUFPLENBQUNlLEVBQUUsQ0FBQ0MsV0FBVyxDQUFDO1lBQy9DO1lBQ0N4QixRQUFRLENBQVNLLEtBQUssQ0FBQyxHQUFHRyxPQUFPLENBQUNlLEVBQUUsQ0FBQ0MsV0FBVztVQUNuRDtRQUNGO1FBQ0FuQixLQUFLLEVBQUU7TUFDVDtNQUNBWCxHQUFHLENBQUNRLElBQUksQ0FBQ0MsS0FBSyxHQUFHSCxRQUFRO0lBQzNCLENBQUMsTUFBTTtNQUNMLE9BQU9MLEdBQUcsQ0FBQ3NCLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQ0MsSUFBSSxDQUFDO1FBQzFCQyxRQUFRLEVBQUUsSUFBSTtRQUNkRixNQUFNLEVBQUUsY0FBYztRQUN0QkssT0FBTyxFQUFFO01BQ1gsQ0FBQyxDQUFDO0lBQ0o7SUFDQTFCLElBQUksQ0FBQyxDQUFDO0VBQ1IsQ0FBQyxDQUFDLE9BQU9lLEtBQUssRUFBRTtJQUNkakIsR0FBRyxDQUFDZ0MsTUFBTSxDQUFDZixLQUFLLENBQUNBLEtBQUssQ0FBQztJQUN2QixPQUFPaEIsR0FBRyxDQUFDc0IsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDQyxJQUFJLENBQUM7TUFDMUJDLFFBQVEsRUFBRSxJQUFJO01BQ2RGLE1BQU0sRUFBRSxjQUFjO01BQ3RCSyxPQUFPLEVBQUU7SUFDWCxDQUFDLENBQUM7RUFDSjtBQUNGIiwiaWdub3JlTGlzdCI6W119